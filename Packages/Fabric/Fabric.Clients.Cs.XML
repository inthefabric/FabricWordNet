<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fabric.Clients.Cs</name>
    </assembly>
    <members>
        <member name="T:Fabric.Clients.Cs.Session.IFabricAppDataProvSession">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Session.IFabricPersonSession">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Session.IFabricOauthSession">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricOauthSession.Logout">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricOauthSession.RefreshTokenIfNecessary">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricOauthSession.GrantCode">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricOauthSession.BearerToken">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricOauthSession.RefreshToken">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricOauthSession.IsAuthenticated">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricOauthSession.Expiration">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricOauthSession.SessionId">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricPersonSession.GetGrantCodeUrl(System.Boolean)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricPersonSession.GetGrantWindowOpenScript(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricPersonSession.HandleGrantCodeRedirect(System.Web.HttpRequestBase)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricAppDataProvSession.RequestAuthentication">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricAppDataProvSession.AppSess">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ITraversalService">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IService">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalService.GetActiveApp">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalService.GetActiveMember">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalService.GetActiveUser">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalService.GetRoot">
            <summary>
              The starting point for all traversal queries.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalService.GetRootStep">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IOauthService">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.AccessToken">
            <summary>
              Get an OAuth access token using one of four 'flows'.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.AccessTokenAuthCode">
            <summary>
              This OAuth flow should be used immediately after obtaining an authorization code from the OAuth entry process.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.AccessTokenClientCredentials">
            <summary>
              This OAuth flow should be used to begin an OAuth session for your Fabric App.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.AccessTokenClientDataProv">
            <summary>
              This OAuth flow should be used to begin an OAuth session for your Fabric App's Data Provider User.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.AccessTokenRefresh">
            <summary>
              This OAuth flow should be used to refresh an expired access token.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.Login">
            <summary>
              This API request is unique -- it represents the entry point for Fabric's OAuth 2.0 authentication process.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOauthService.Logout">
            <summary>
              Terminates a particular OAuth session by invalidating the session's access token.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IModifyService">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AddClass">
            <summary>
              Create a new Class.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AddClasses">
            <summary>
              MISSING:Modify_AddClasses
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AddFactor">
            <summary>
              Create a new Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AddInstance">
            <summary>
              Create a new Instance.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AddUrl">
            <summary>
              Create a new Url.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AttachDescriptorToFactor">
            <summary>
              Create a new Descriptor and attach it to the specified Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AttachDirectorToFactor">
            <summary>
              Create a new Director and attach it to the specified Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AttachEventorToFactor">
            <summary>
              Create a new Eventor and attach it to the specified Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AttachIdentorToFactor">
            <summary>
              Create a new Identor and attach it to the specified Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AttachLocatorToFactor">
            <summary>
              Create a new Locator and attach it to the specified Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.AttachVectorToFactor">
            <summary>
              Create a new Vector and attach it to the specified Factor.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.CompleteFactor">
            <summary>
              Move a Factor from the 'incomplete' state to the 'complete' state.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IModifyService.DeleteFactor">
            <summary>
              Delete a Factor.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IMetaService">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IMetaService.GetSpecification">
            <summary>
              Load the latest specifications and documentation for all Fabric API services.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IMetaService.GetTime">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IMetaService.GetVersion">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Logging.IFabricLog">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Logging.IFabricLog.Info(Fabric.Clients.Cs.IFabricClientConfig,System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Logging.IFabricLog.Debug(Fabric.Clients.Cs.IFabricClientConfig,System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Logging.IFabricLog.Error(Fabric.Clients.Cs.IFabricClientConfig,System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Logging.IFabricLog.Fatal(Fabric.Clients.Cs.IFabricClientConfig,System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Logging.IFabricLog.Warn(Fabric.Clients.Cs.IFabricClientConfig,System.String)">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ITraversalStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalStep.Trav">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IOperation">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOperation.Method">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IOperation.RequiredAuth">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Session.IFabricSessionContainer">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.IFabricSessionContainer.Person">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.IFabricClientConfig">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IFabricClientConfig.GetSessionContainer">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IFabricClientConfig.LogInfo(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IFabricClientConfig.LogDebug(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IFabricClientConfig.LogError(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IFabricClientConfig.LogFatal(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IFabricClientConfig.LogWarn(System.String)">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.ConfigKey">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.ApiPath">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.AppId">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.AppSecret">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.AppDataProvPersonId">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.AppOAuthRedirectUri">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClientConfig.Logger">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.IFabricClient">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.IHideSystemIntellisense">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IHideSystemIntellisense.GetType">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IHideSystemIntellisense.GetHashCode">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IHideSystemIntellisense.ToString">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.IHideSystemIntellisense.Equals(System.Object)">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClient.Config">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClient.PersonSession">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClient.AppSession">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClient.AppDataProvSession">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClient.Services">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.IFabricClient.UseDataProviderPerson">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetActiveAppOperation">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetActiveAppOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetActiveMemberOperation">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetActiveMemberOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetActiveUserOperation">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetActiveUserOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetRootOperation">
            <summary>
              The starting point for all traversal queries.
            </summary>
            <remarks>
              <para>The starting point for all traversal queries. Use traversal links and traversal functions to navigate through Fabric's objects. These links and functions are capable of performing both simple and highly complex queries.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetRootOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAccessTokenOperation">
            <summary>
              Get an OAuth access token using one of four 'flows'.
            </summary>
            <remarks>
              <para>Get an OAuth access token using one of four 'flows'.  Fabric offers separate requests for these access token flows, but also provides this generic request for compatibility with the OAuth 2.0 specification.  See the other access token flows (such as the 'Client Credentials' flow) for information about the available OAuth flows.</para>
              <para>An OAuth access token must be included with every Fabric API request (with the exception of the OAuth requests).  This token is the result of a successful login, an accepted App scope, a confirmed App secret code, and a confirmed authorization code.  Thus, each token is associated with a specific App, User, and successful OAuth process.  When included with an API request, Fabric obtains the relevant App and User ID values, and generates a response accordingly.</para>
              <para>See FabOauthAccess for information on how to include an OAuth access token with a Fabric API request.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAccessTokenOperation.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="grant_type">
              Defines the desired access token flow.  The four accepted (case-sensitive) values are 'authorization_code', 'refresh', 'client_credentials', and 'client_data_provider'.
            </param>
            <param name="client_id">
              The App ID value (an integer) for the App making the request. This parameter is only used by the 'Client Credentials' and 'Client Data Provider' flows.
            </param>
            <param name="client_secret">
              The alpha-numeric Secret for the App making the request. This verifies that the App itself is making the request, and not an imposter.  For this reason, the secret code should not be shared with anyone.
            </param>
            <param name="code">
              The authorization code obtained after a successful OAuth entry process. This parameter is only used by the 'Authorization Code' flow.
            </param>
            <param name="refresh_token">
              The refresh token obtained after a successful 'Authorization Code' access token flow.  A refresh token only applies to User-based OAuth sessions, not for App-based OAuth sessions.  This parameter is only used by the 'Refresh' flow.
            </param>
            <param name="redirect_uri">
              This value must be exactly the same as the redirect URI provided for the OAuth entry process.
            </param>
            <param name="data_prov_userid">
              The User ID value (an integer) for the Data Provider of the App making the request. Upon App creation, Fabric creates a special 'Data Provider' User which the App uses for creating items in the Fabric system. This parameter is only used by the 'Client Data Provider' flow.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAccessTokenAuthCodeOperation">
            <summary>
              This OAuth flow should be used immediately after obtaining an authorization code from the OAuth entry process.
            </summary>
            <remarks>
              <para>This OAuth flow should be used immediately after obtaining an authorization code from the OAuth entry process. Fabric verifies the authorization code, determines the associated App and User IDs, and generates a new access token.</para>
              <para>See Access Token for general information about the OAuth process.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAccessTokenAuthCodeOperation.Get(System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="code">
              The authorization code obtained after a successful OAuth entry process. This parameter is only used by the 'Authorization Code' flow.
            </param>
            <param name="client_secret">
              The alpha-numeric Secret for the App making the request. This verifies that the App itself is making the request, and not an imposter.  For this reason, the secret code should not be shared with anyone.
            </param>
            <param name="redirect_uri">
              This value must be exactly the same as the redirect URI provided for the OAuth entry process.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAccessTokenClientCredentialsOperation">
            <summary>
              This OAuth flow should be used to begin an OAuth session for your Fabric App.
            </summary>
            <remarks>
              <para>This OAuth flow should be used to begin an OAuth session for your Fabric App. This flow does not require an authorization code from the typical OAuth entry process.</para>
              <para>See Access Token or general information about the OAuth process.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAccessTokenClientCredentialsOperation.Get(System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="client_id">
              The App ID value (an integer) for the App making the request. This parameter is only used by the 'Client Credentials' and 'Client Data Provider' flows.
            </param>
            <param name="client_secret">
              The alpha-numeric Secret for the App making the request. This verifies that the App itself is making the request, and not an imposter.  For this reason, the secret code should not be shared with anyone.
            </param>
            <param name="redirect_uri">
              This value must be exactly the same as the redirect URI provided for the OAuth entry process.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAccessTokenClientDataProvOperation">
            <summary>
              This OAuth flow should be used to begin an OAuth session for your Fabric App's Data Provider User.
            </summary>
            <remarks>
              <para>This OAuth flow should be used to begin an OAuth session for your Fabric App's Data Provider User. This flow does not require an authorization code from the typical OAuth entry process. Note: this flow is not defined by the OAuth 2.0 specification; it is specifically designed to meet a Fabric App's OAuth needs.</para>
              <para>See Access Token for general information about the OAuth process.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAccessTokenClientDataProvOperation.Get(System.String,System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="client_id">
              The App ID value (an integer) for the App making the request. This parameter is only used by the 'Client Credentials' and 'Client Data Provider' flows.
            </param>
            <param name="client_secret">
              The alpha-numeric Secret for the App making the request. This verifies that the App itself is making the request, and not an imposter.  For this reason, the secret code should not be shared with anyone.
            </param>
            <param name="redirect_uri">
              This value must be exactly the same as the redirect URI provided for the OAuth entry process.
            </param>
            <param name="data_prov_userid">
              The User ID value (an integer) for the Data Provider of the App making the request. Upon App creation, Fabric creates a special 'Data Provider' User which the App uses for creating items in the Fabric system. This parameter is only used by the 'Client Data Provider' flow.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAccessTokenRefreshOperation">
            <summary>
              This OAuth flow should be used to refresh an expired access token.
            </summary>
            <remarks>
              <para>This OAuth flow should be used to refresh an expired access token. If the refresh token is valid, Fabric generates new access and refresh tokens for the given OAuth session. This process also invalidates the original refresh token.</para>
              <para>App-only access tokens (obtained with the 'Client Credentials' flow) should not be refreshed; the App should simply request a new access token.</para>
              <para>See Access Token for general information about the OAuth process.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAccessTokenRefreshOperation.Get(System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="refresh_token">
              The refresh token obtained after a successful 'Authorization Code' access token flow.  A refresh token only applies to User-based OAuth sessions, not for App-based OAuth sessions.  This parameter is only used by the 'Refresh' flow.
            </param>
            <param name="client_secret">
              The alpha-numeric Secret for the App making the request. This verifies that the App itself is making the request, and not an imposter.  For this reason, the secret code should not be shared with anyone.
            </param>
            <param name="redirect_uri">
              This value must be exactly the same as the redirect URI provided for the OAuth entry process.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ILoginOperation">
            <summary>
              This API request is unique -- it represents the entry point for Fabric's OAuth 2.0 authentication process.
            </summary>
            <remarks>
              <para>This API request is unique -- it represents the entry point for Fabric's OAuth 2.0 authentication process.  Instead of making this API request directly from a Fabric App, the App should provide a link so that its users can load this request's URL (including the required query-string parameters) in their browser.</para>
              <para>A web-based Fabric App would typically load this OAuth entry page as a browser popup window. Once the user completes the full OAuth process (or upon an error), Fabric will redirect the browser to the App's specified redirect URI.  This redirect includes query-string parameters that provide success or error information.</para>
              <para>	</para>
              <para>For a user, this OAuth process includes two steps: login and 'scope' acceptance.</para>
              <para>The first step is login, where the user is prompted to enter their username and password. If a user has already logged into Fabric (i.e. has an active authentication cookie from Fabric) and the App has not requested 'switchMode', the login step is skipped.  Important note: login occurs on Fabric's server -- a Fabric App never receives or sends a Fabric user's login credentials.</para>
              <para>The second step is 'scope' acceptance.  The page tells the user that a particular Fabric App wants to connect to their Fabric account, and briefly explains what this means to the user and the App. The user must accept or deny access.  Upon acceptance, the page redirects to the App with a 'success' message.  Upon denial, Fabric performs an error redirect.</para>
              <para>	</para>
              <para>Similar to the login step, if a user has already accepted 'scope' for a particular App, the second step is skipped.  Thus, in the case where a user is already authenticated with Fabric and has already allowed App access, the entire process results in a success redirect.</para>
              <para>	</para>
              <para>See FabOauthLogin for the query string parameters that can be included in the success and error redirects.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.ILoginOperation.Get(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="response_type">
              Describes which type of authentication should be performed. For now, this value should always be 'code'. Fabric may accept more response types in the future.
            </param>
            <param name="client_id">
              The ID of the Fabric App making the OAuth Login request.  The access code provided after a successful OAuth process will be associated with this App ID and the authenticated User's ID.
            </param>
            <param name="redirect_uri">
              The URL which will receive success/error redirects from the OAuth Login process.  This URL should handle the following query-string parameters: access_code, error, error_description, state.
            </param>
            <param name="scope">
              Describes the level of access the App will have to the User's account.  This value is required by the OAuth 2.0 specification, however, Fabric currently ignores it.  All OAuth requests currently receive the same level of access to the User's account.  Fabric may begin using this parameter in the future.
            </param>
            <param name="state">
              Provides a security function for a Fabric App.  All success/message redirect responses include a 'state' query-string parameter.  The App should check this value against the state value provided in the initial request.  The two values should always be equal. If the values are not equal, then the redirect did not come from the Fabric OAuth process (or from a different user's process), and should be handled accordingly.
            </param>
            <param name="switchMode">
              Causes the login process to behave in different ways.  If a value of '1' is provided, the user will see the login page even if they are currently authenticated with Fabric.  This is useful shared-computer scenarios, where the most-recently authenticated user may be different from the user making the current request.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ILogoutOperation">
            <summary>
              Terminates a particular OAuth session by invalidating the session's access token.
            </summary>
            <remarks>
              <para>Terminates a particular OAuth session by invalidating the session's access token. Any further OAuth requests made with this particular access token are rejected.</para>
              <para>Logging out of an OAuth session does not revoke the the App scope accepted by the User (during the first OAuth login process).  Furthermore, it does not end the User's authenticated session with Fabric.  Thus, a subsequent OAuth entry by the same user may actually require zero input from the user -- they could potentially bypass both OAuth entry steps (login and scope acceptance).  This allows a user to begin a new OAuth session seamlessly, even after logging out.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.ILogoutOperation.Get(System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="access_token">
              The access token for the desired OAuth session. This request will fail if the token has already been invalidated by a previous logout.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAddClassOperation">
            <summary>
              Create a new Class.
            </summary>
            <remarks>
              <para>Create a new Class. Attach Factors to this Class immediately after creation to give it meaning and relevance within Fabric.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAddClassOperation.Post(System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="Name">
              The name of the new Class. It must be unique on its own, or be unique in combination with the disambiguation text.
            </param>
            <param name="Disamb">
              The disambiguation text for the new Class.  When provided, the disambiguation text permits the use of a non-unique name.
            </param>
            <param name="Note">
              A brief description of the new Class. It can be useful for helping others understand the creator's intended purpose or meaning.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAddClassesOperation">
            <summary>
              MISSING:Modify_AddClasses
            </summary>
            <remarks>
              <para>MISSING:Modify_AddClasses</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAddClassesOperation.Post(Fabric.Clients.Cs.Api.FabBatchNewClass[])">
            <summary>
              Perform the operation.
            </summary>
            <param name="Classes">
              MISSING:Modify_AddClasses_Classes
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAddFactorOperation">
            <summary>
              Create a new Factor.
            </summary>
            <remarks>
              <para>Create a new Factor. The Factor begins in the 'incomplete' state, with no FactorElements attached.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAddFactorOperation.Post(System.Int64,System.Int64,System.Int64,System.Boolean,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="PrimaryArtifactId">
              Identifies the primary Artifact for the new Factor.
            </param>
            <param name="RelatedArtifactId">
              Identifies the related Artifact for the new Factor. The related Artifact cannot be the same as the primary Artifact.
            </param>
            <param name="FactorAssertionId">
              Identifies the FactorAssertion for the new Factor. In cases where the assertion type is unclear or not known, please use the 'Undefined' FactorAssertion.
            </param>
            <param name="IsDefining">
              The IsDefining value for the new Factor.
            </param>
            <param name="Note">
              A sentence or short paragraph describing (in a human-readable format) the intended meaning of the new Factor. A descriptive note can help others understand the creator's intended purpose or meaning for the Factor.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAddInstanceOperation">
            <summary>
              Create a new Instance.
            </summary>
            <remarks>
              <para>Create a new Instance. Attach Factors to this Instance immediately after creation to give it meaning and relevance within Fabric.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAddInstanceOperation.Post(System.String,System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="Name">
              The name of the new Instance. It does not need to be unique.
            </param>
            <param name="Disamb">
              The disambiguation text for the new Instance. When provided, the disambiguation text permits the use of a non-unique name.
            </param>
            <param name="Note">
              A brief description of the new Instance.  It can be useful for helping others understand the creator's intended purpose or meaning.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAddUrlOperation">
            <summary>
              Create a new Url.
            </summary>
            <remarks>
              <para>Create a new Url.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAddUrlOperation.Post(System.String,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="AbsoluteUrl">
              The complete absolute URL for new Url object. It must include the URL's protocol (such as 'http://').
            </param>
            <param name="Name">
              The name of the new Url.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAttachDescriptorToFactorOperation">
            <summary>
              Create a new Descriptor and attach it to the specified Factor.
            </summary>
            <remarks>
              <para>Create a new Descriptor and attach it to the specified Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAttachDescriptorToFactorOperation.Post(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor that will receive the Descriptor attachment.
            </param>
            <param name="DescriptorTypeId">
              Identifies the DescriptorType for the new Descriptor.
            </param>
            <param name="PrimaryArtifactRefineId">
              Identifies the Artifact that refines the Factor's primary Artifact.
            </param>
            <param name="RelatedArtifactRefineId">
              Identifies the Artifact that refines the Factor's related Artifact.
            </param>
            <param name="DescriptorTypeRefineId">
              Identifies the Artifact that refines the new Descriptor's DescriptorType.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAttachDirectorToFactorOperation">
            <summary>
              Create a new Director and attach it to the specified Factor.
            </summary>
            <remarks>
              <para>Create a new Director and attach it to the specified Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAttachDirectorToFactorOperation.Post(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor that will receive the Director attachment.
            </param>
            <param name="DirectorTypeId">
              Identifies the DirectorType for the new Director.
            </param>
            <param name="PrimaryDirectorActionId">
              Identifies the DirectorAction associated with the Factor's primary Artifact.
            </param>
            <param name="RelatedDirectorActionId">
              Identifies the DirectorAction associated with the Factor's related Artifact.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAttachEventorToFactorOperation">
            <summary>
              Create a new Eventor and attach it to the specified Factor.
            </summary>
            <remarks>
              <para>Create a new Eventor and attach it to the specified Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAttachEventorToFactorOperation.Post(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor that will receive the Eventor attachment.
            </param>
            <param name="EventorTypeId">
              Identifies the EventorType for the new Eventor.
            </param>
            <param name="EventorPrecisionId">
              Identifies the EventorPrecision for the new Eventor.
            </param>
            <param name="DateTime">
              The date and time for the new Eventor. This value must be accurate to the level of precision defined by the specified EventorPrecision. Set unused month/day values to 1, and unused hour/minute values (and beyond) to 0.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAttachIdentorToFactorOperation">
            <summary>
              Create a new Identor and attach it to the specified Factor.
            </summary>
            <remarks>
              <para>Create a new Identor and attach it to the specified Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAttachIdentorToFactorOperation.Post(System.Int64,System.Int64,System.String)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor that will receive the Identor attachment.
            </param>
            <param name="IdentorTypeId">
              Identifies the IdentorType for the new Identor.
            </param>
            <param name="Value">
              The text-based value for the new Identor.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAttachLocatorToFactorOperation">
            <summary>
              Create a new Locator and attach it to the specified Factor.
            </summary>
            <remarks>
              <para>Create a new Locator and attach it to the specified Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAttachLocatorToFactorOperation.Post(System.Int64,System.Int64,System.Double,System.Double,System.Double)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor that will receive the Locator attachment.
            </param>
            <param name="LocatorTypeId">
              Identifies the LocatorType for the new Locator.
            </param>
            <param name="ValueX">
              The X value for the new Locator.
            </param>
            <param name="ValueY">
              The Y value for the new Locator.
            </param>
            <param name="ValueZ">
              The Z value for the new Locator.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IAttachVectorToFactorOperation">
            <summary>
              Create a new Vector and attach it to the specified Factor.
            </summary>
            <remarks>
              <para>Create a new Vector and attach it to the specified Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IAttachVectorToFactorOperation.Post(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor that will receive the Vector attachment.
            </param>
            <param name="VectorTypeId">
              Identifies the VectorType for the new Vector.
            </param>
            <param name="Value">
              The value for the new Vector. This value must be within the range specified by the VectorType. Decimal values are not supported; if additional precision is required, use a VectorUnitPrefix such as Milli or Micro.
            </param>
            <param name="AxisArtifactId">
              The Artifact which provides meaning for the new Vector.
            </param>
            <param name="VectorUnitId">
              Identifies the VectorUnit for the new Vector.
            </param>
            <param name="VectorUnitPrefixId">
              Identifies the VectorUnitPrefix for the new Vector.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ICompleteFactorOperation">
            <summary>
              Move a Factor from the 'incomplete' state to the 'complete' state.
            </summary>
            <remarks>
              <para>Move a Factor from the 'incomplete' state to the 'complete' state.  A Factor must have a Descriptor before it can be completed. Once a Factor is completed, it can only be deleted -- no further modifications are permitted.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.ICompleteFactorOperation.Put(System.Int64,System.Boolean)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the incomplete Factor to be completed.
            </param>
            <param name="IsCompleted">
              The IsCompleted value must be 'true'.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IDeleteFactorOperation">
            <summary>
              Delete a Factor.
            </summary>
            <remarks>
              <para>Delete a Factor.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IDeleteFactorOperation.Delete(System.Int64,System.Boolean)">
            <summary>
              Perform the operation.
            </summary>
            <param name="FactorId">
              Identifies the Factor to be deleted.
            </param>
            <param name="IsDeleted">
              The IsDeleted value must be 'true'.
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetSpecificationOperation">
            <summary>
              Load the latest specifications and documentation for all Fabric API services.
            </summary>
            <remarks>
              <para>Load the latest specifications and documentation for all Fabric API services.</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetSpecificationOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetTimeOperation">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetTimeOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IGetVersionOperation">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.IGetVersionOperation.Get">
            <summary>
              Perform the operation.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabResponse">
            <summary />
            <summary>
              The API response wrapper; contains the Data payload and other metadata.
            </summary>
            <remarks>
              <para>The API response wrapper; contains the Data payload and other metadata.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.AppId">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.BaseUri">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.Count">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.DataString">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.DataLen">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.DbMs">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.Error">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.Functions">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.HasMore">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.HttpStatus">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.Links">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.RequestUri">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.StartIndex">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.Timestamp">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.TotalMs">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse.UserId">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabResponse`1">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.FabResponse`1.FirstDataItem">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabResponse`1.Data">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Session.IFabricAppSession">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Session.IFabricAppSession.RequestAuthentication">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ITraversalStepAlias`1">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalStepAlias`1.Alias">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.ITraversalStepAlias`1.AsStep">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.TraversalStepExt">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalStepExt.As``1(``0,System.String,Fabric.Clients.Cs.Api.ITraversalStepAlias{``0}@)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalStepExt.Back``2(``0,Fabric.Clients.Cs.Api.ITraversalStepAlias{``1})">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalStepExt.Limit``1(``0,System.Int32,System.Int32)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalStepExt.WhereId``1(``0,System.Int64)">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabricServices">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabricServices.ApiVersion">
            <summary>
              The API version used to generate the Fabric client code.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabricServices.Traversal">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabricServices.Oauth">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabricServices.Modify">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabricServices.Meta">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.FabricErrorException">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricErrorException.#ctor(Fabric.Clients.Cs.Api.FabResponse)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricErrorException.#ctor(Fabric.Clients.Cs.Api.FabOauthError)">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricErrorException.RespError">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricErrorException.OauthError">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.ITraversalStep`1">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.ITraversalStep`1.GetDataType">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.ITraversalStep`1.Get">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.FabricClientConfig">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.#ctor(System.String,System.String,System.Int64,System.String,System.Int64,System.String,Fabric.Clients.Cs.FabricClientConfig.SessionContainerProvider)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.GetSessionContainer">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.LogInfo(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.LogDebug(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.LogError(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.LogFatal(System.String)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClientConfig.LogWarn(System.String)">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.ConfigKey">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.ApiPath">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.AppId">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.AppSecret">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.AppDataProvPersonId">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.AppOAuthRedirectUri">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClientConfig.Logger">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.FabricClientConfig.SessionContainerProvider">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.Traversal">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.Api.Traversal.GetFullTraversalUri">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabAppStep">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFuncAs">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFuncBack">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFuncLimit">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFuncWhereId">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabAppStep.HasArtifact">
            <summary>
              Links an App to the Artifact that it owns. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links an App to the Artifact that it owns.</para>
              <para>Type: AppHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabAppStep.DefinesMemberList">
            <summary>
              Links an App to a particular Member. (OutToOneOrMore FabMember)
            </summary>
            <remarks>
              <para>Links an App to a particular Member.</para>
              <para>Type: AppDefinesMember</para>
              <para>Relation: Defines</para>
              <para>Connection: OutToOneOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabArtifactStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InAppHas">
            <summary>
              Links an App to the Artifact that it owns. (InFromZeroOrOne FabApp)
            </summary>
            <remarks>
              <para>Links an App to the Artifact that it owns.</para>
              <para>Type: AppHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: InFromZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.UsesArtifactType">
            <summary>
              Links an Artifact to an ArtifactType that describes the type of the associated ArtifactOwnerNode. (OutToOne FabArtifactType)
            </summary>
            <remarks>
              <para>Links an Artifact to an ArtifactType that describes the type of the associated ArtifactOwnerNode.</para>
              <para>Type: ArtifactUsesArtifactType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InClassHas">
            <summary>
              Links an App to the Class that it owns. (InFromZeroOrOne FabClass)
            </summary>
            <remarks>
              <para>Links an App to the Class that it owns.</para>
              <para>Type: ClassHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: InFromZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InInstanceHas">
            <summary>
              Links an App to the Instance that it owns. (InFromZeroOrOne FabInstance)
            </summary>
            <remarks>
              <para>Links an App to the Instance that it owns.</para>
              <para>Type: InstanceHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: InFromZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InMemberCreates">
            <summary>
              Links a Member to the Artifact that it created. (InFromOne FabMember)
            </summary>
            <remarks>
              <para>Links a Member to the Artifact that it created.</para>
              <para>Type: MemberCreatesArtifact</para>
              <para>Relation: Creates</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InUrlHas">
            <summary>
              Links a Url to the Artifact that it owns. (InFromZeroOrOne FabUrl)
            </summary>
            <remarks>
              <para>Links a Url to the Artifact that it owns.</para>
              <para>Type: UrlHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: InFromZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InUserHas">
            <summary>
              Links a User to the Artifact that it owns. (InFromZeroOrOne FabUser)
            </summary>
            <remarks>
              <para>Links a User to the Artifact that it owns.</para>
              <para>Type: UserHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: InFromZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InFactorListUsesPrimary">
            <summary>
              Links a Factor to its primary Artifact, which represents the starting point of the Factor's directional Artifact relationship. (InFromZeroOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its primary Artifact, which represents the starting point of the Factor's directional Artifact relationship.</para>
              <para>Type: FactorUsesPrimaryArtifact</para>
              <para>Relation: UsesPrimary</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InFactorListUsesRelated">
            <summary>
              Links a Factor to its related Artifact, which represents the ending point of the Factor's directional Artifact relationship. (InFromZeroOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its related Artifact, which represents the ending point of the Factor's directional Artifact relationship.</para>
              <para>Type: FactorUsesRelatedArtifact</para>
              <para>Relation: UsesRelated</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InDescriptorListRefinesPrimaryWith">
            <summary>
              Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's primary Artifact. (InFromZeroOrMore FabDescriptor)
            </summary>
            <remarks>
              <para>Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's primary Artifact.</para>
              <para>Type: DescriptorRefinesPrimaryWithArtifact</para>
              <para>Relation: RefinesPrimaryWith</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InDescriptorListRefinesRelatedWith">
            <summary>
              Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's related Artifact. (InFromZeroOrMore FabDescriptor)
            </summary>
            <remarks>
              <para>Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's related Artifact.</para>
              <para>Type: DescriptorRefinesRelatedWithArtifact</para>
              <para>Relation: RefinesRelatedWith</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InDescriptorListRefinesTypeWith">
            <summary>
              Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the DescriptorType's meaning or purpose. (InFromZeroOrMore FabDescriptor)
            </summary>
            <remarks>
              <para>Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the DescriptorType's meaning or purpose.</para>
              <para>Type: DescriptorRefinesTypeWithArtifact</para>
              <para>Relation: RefinesTypeWith</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactStep.InVectorListUsesAxis">
            <summary>
              Links a Vector to an Artifact that 'labels' its value's axis. (InFromZeroOrMore FabVector)
            </summary>
            <remarks>
              <para>Links a Vector to an Artifact that 'labels' its value's axis.</para>
              <para>Type: VectorUsesAxisArtifact</para>
              <para>Relation: UsesAxis</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabArtifactTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabArtifactTypeStep.InArtifactListUses">
            <summary>
              Links an Artifact to an ArtifactType that describes the type of the associated ArtifactOwnerNode. (InFromZeroOrMore FabArtifact)
            </summary>
            <remarks>
              <para>Links an Artifact to an ArtifactType that describes the type of the associated ArtifactOwnerNode.</para>
              <para>Type: ArtifactUsesArtifactType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabClassStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabClassStep.HasArtifact">
            <summary>
              Links an App to the Class that it owns. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links an App to the Class that it owns.</para>
              <para>Type: ClassHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabDescriptorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDescriptorStep.InFactorListUses">
            <summary>
              Links a Factor to its Descriptor Element, which defines the relationship between the primary and related Artifact. (InFromOneOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its Descriptor Element, which defines the relationship between the primary and related Artifact.</para>
              <para>Type: FactorUsesDescriptor</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromOneOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDescriptorStep.UsesDescriptorType">
            <summary>
              Links a Descriptor to a DescriptorType that specifies the type of relationship or connection. (OutToOne FabDescriptorType)
            </summary>
            <remarks>
              <para>Links a Descriptor to a DescriptorType that specifies the type of relationship or connection.</para>
              <para>Type: DescriptorUsesDescriptorType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDescriptorStep.RefinesPrimaryWithArtifact">
            <summary>
              Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's primary Artifact. (OutToZeroOrOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's primary Artifact.</para>
              <para>Type: DescriptorRefinesPrimaryWithArtifact</para>
              <para>Relation: RefinesPrimaryWith</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDescriptorStep.RefinesRelatedWithArtifact">
            <summary>
              Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's related Artifact. (OutToZeroOrOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the Factor's related Artifact.</para>
              <para>Type: DescriptorRefinesRelatedWithArtifact</para>
              <para>Relation: RefinesRelatedWith</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDescriptorStep.RefinesTypeWithArtifact">
            <summary>
              Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the DescriptorType's meaning or purpose. (OutToZeroOrOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Descriptor to an Artifact that specifies or clarifies a particular aspect of the DescriptorType's meaning or purpose.</para>
              <para>Type: DescriptorRefinesTypeWithArtifact</para>
              <para>Relation: RefinesTypeWith</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabDescriptorTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDescriptorTypeStep.InDescriptorListUses">
            <summary>
              Links a Descriptor to a DescriptorType that specifies the type of relationship or connection. (InFromZeroOrMore FabDescriptor)
            </summary>
            <remarks>
              <para>Links a Descriptor to a DescriptorType that specifies the type of relationship or connection.</para>
              <para>Type: DescriptorUsesDescriptorType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabDirectorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorStep.InFactorListUses">
            <summary>
              Links a Factor to its Director Element, which creates a directional pathway between the primary and related Artifacts. (InFromOneOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its Director Element, which creates a directional pathway between the primary and related Artifacts.</para>
              <para>Type: FactorUsesDirector</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromOneOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorStep.UsesDirectorType">
            <summary>
              Links a Director to a DirectorType that specifies the type and reason for the pathway. (OutToOne FabDirectorType)
            </summary>
            <remarks>
              <para>Links a Director to a DirectorType that specifies the type and reason for the pathway.</para>
              <para>Type: DirectorUsesDirectorType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorStep.UsesPrimaryDirectorAction">
            <summary>
              Links a Director to a DirectorAction that specifies the action to be performed on the Factor's primary Artifact. (OutToOne FabDirectorAction)
            </summary>
            <remarks>
              <para>Links a Director to a DirectorAction that specifies the action to be performed on the Factor's primary Artifact.</para>
              <para>Type: DirectorUsesPrimaryDirectorAction</para>
              <para>Relation: UsesPrimary</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorStep.UsesRelatedDirectorAction">
            <summary>
              Links a Director to a DirectorAction that specifies the action to be performed on the Factor's related Artifact. (OutToOne FabDirectorAction)
            </summary>
            <remarks>
              <para>Links a Director to a DirectorAction that specifies the action to be performed on the Factor's related Artifact.</para>
              <para>Type: DirectorUsesRelatedDirectorAction</para>
              <para>Relation: UsesRelated</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabDirectorActionStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorActionStep.InDirectorListUsesPrimary">
            <summary>
              Links a Director to a DirectorAction that specifies the action to be performed on the Factor's primary Artifact. (InFromZeroOrMore FabDirector)
            </summary>
            <remarks>
              <para>Links a Director to a DirectorAction that specifies the action to be performed on the Factor's primary Artifact.</para>
              <para>Type: DirectorUsesPrimaryDirectorAction</para>
              <para>Relation: UsesPrimary</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorActionStep.InDirectorListUsesRelated">
            <summary>
              Links a Director to a DirectorAction that specifies the action to be performed on the Factor's related Artifact. (InFromZeroOrMore FabDirector)
            </summary>
            <remarks>
              <para>Links a Director to a DirectorAction that specifies the action to be performed on the Factor's related Artifact.</para>
              <para>Type: DirectorUsesRelatedDirectorAction</para>
              <para>Relation: UsesRelated</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabDirectorTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabDirectorTypeStep.InDirectorListUses">
            <summary>
              Links a Director to a DirectorType that specifies the type and reason for the pathway. (InFromZeroOrMore FabDirector)
            </summary>
            <remarks>
              <para>Links a Director to a DirectorType that specifies the type and reason for the pathway.</para>
              <para>Type: DirectorUsesDirectorType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabEventorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabEventorStep.InFactorListUses">
            <summary>
              Links a Factor to its Eventor Element, which applies the concept of time. (InFromOneOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its Eventor Element, which applies the concept of time.</para>
              <para>Type: FactorUsesEventor</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromOneOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabEventorStep.UsesEventorType">
            <summary>
              Links an Eventor to an EventorType that specifies the significance of this point in time. (OutToOne FabEventorType)
            </summary>
            <remarks>
              <para>Links an Eventor to an EventorType that specifies the significance of this point in time.</para>
              <para>Type: EventorUsesEventorType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabEventorStep.UsesEventorPrecision">
            <summary>
              Links an Eventor to an EventorPrecision that specifies the level of accuracy given to this point in time. (OutToOne FabEventorPrecision)
            </summary>
            <remarks>
              <para>Links an Eventor to an EventorPrecision that specifies the level of accuracy given to this point in time.</para>
              <para>Type: EventorUsesEventorPrecision</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabEventorPrecisionStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabEventorPrecisionStep.InEventorListUses">
            <summary>
              Links an Eventor to an EventorPrecision that specifies the level of accuracy given to this point in time. (InFromZeroOrMore FabEventor)
            </summary>
            <remarks>
              <para>Links an Eventor to an EventorPrecision that specifies the level of accuracy given to this point in time.</para>
              <para>Type: EventorUsesEventorPrecision</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabEventorTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabEventorTypeStep.InEventorListUses">
            <summary>
              Links an Eventor to an EventorType that specifies the significance of this point in time. (InFromZeroOrMore FabEventor)
            </summary>
            <remarks>
              <para>Links an Eventor to an EventorType that specifies the significance of this point in time.</para>
              <para>Type: EventorUsesEventorType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabFactorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.InMemberCreates">
            <summary>
              Links a Member to the Factor that it created. (InFromOne FabMember)
            </summary>
            <remarks>
              <para>Links a Member to the Factor that it created.</para>
              <para>Type: MemberCreatesFactor</para>
              <para>Relation: Creates</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesPrimaryArtifact">
            <summary>
              Links a Factor to its primary Artifact, which represents the starting point of the Factor's directional Artifact relationship. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Factor to its primary Artifact, which represents the starting point of the Factor's directional Artifact relationship.</para>
              <para>Type: FactorUsesPrimaryArtifact</para>
              <para>Relation: UsesPrimary</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesRelatedArtifact">
            <summary>
              Links a Factor to its related Artifact, which represents the ending point of the Factor's directional Artifact relationship. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Factor to its related Artifact, which represents the ending point of the Factor's directional Artifact relationship.</para>
              <para>Type: FactorUsesRelatedArtifact</para>
              <para>Relation: UsesRelated</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesFactorAssertion">
            <summary>
              Links a Factor to a FactorAssertion that specifies the type of information and/or level of confidence. (OutToOne FabFactorAssertion)
            </summary>
            <remarks>
              <para>Links a Factor to a FactorAssertion that specifies the type of information and/or level of confidence.</para>
              <para>Type: FactorUsesFactorAssertion</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.ReplacesFactor">
            <summary>
              Links a new Factor to the Factor that it has replaced. (OutToZeroOrOne FabFactor)
            </summary>
            <remarks>
              <para>Links a new Factor to the Factor that it has replaced.</para>
              <para>Type: FactorReplacesFactor</para>
              <para>Relation: Replaces</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesDescriptor">
            <summary>
              Links a Factor to its Descriptor Element, which defines the relationship between the primary and related Artifact. (OutToOne FabDescriptor)
            </summary>
            <remarks>
              <para>Links a Factor to its Descriptor Element, which defines the relationship between the primary and related Artifact.</para>
              <para>Type: FactorUsesDescriptor</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesDirector">
            <summary>
              Links a Factor to its Director Element, which creates a directional pathway between the primary and related Artifacts. (OutToZeroOrOne FabDirector)
            </summary>
            <remarks>
              <para>Links a Factor to its Director Element, which creates a directional pathway between the primary and related Artifacts.</para>
              <para>Type: FactorUsesDirector</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesEventor">
            <summary>
              Links a Factor to its Eventor Element, which applies the concept of time. (OutToZeroOrOne FabEventor)
            </summary>
            <remarks>
              <para>Links a Factor to its Eventor Element, which applies the concept of time.</para>
              <para>Type: FactorUsesEventor</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesIdentor">
            <summary>
              Links a Factor to its Identor Element, which applies a name or identifier. (OutToZeroOrOne FabIdentor)
            </summary>
            <remarks>
              <para>Links a Factor to its Identor Element, which applies a name or identifier.</para>
              <para>Type: FactorUsesIdentor</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesLocator">
            <summary>
              Links a Factor to its Locator Element, which provides a geographical or relative position. (OutToZeroOrOne FabLocator)
            </summary>
            <remarks>
              <para>Links a Factor to its Locator Element, which provides a geographical or relative position.</para>
              <para>Type: FactorUsesLocator</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorStep.UsesVector">
            <summary>
              Links a Factor to its Vector Element, which applies a numeric axis and value. (OutToZeroOrOne FabVector)
            </summary>
            <remarks>
              <para>Links a Factor to its Vector Element, which applies a numeric axis and value.</para>
              <para>Type: FactorUsesVector</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToZeroOrOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabFactorAssertionStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabFactorAssertionStep.InFactorListUses">
            <summary>
              Links a Factor to a FactorAssertion that specifies the type of information and/or level of confidence. (InFromZeroOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to a FactorAssertion that specifies the type of information and/or level of confidence.</para>
              <para>Type: FactorUsesFactorAssertion</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabIdentorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabIdentorStep.InFactorListUses">
            <summary>
              Links a Factor to its Identor Element, which applies a name or identifier. (InFromOneOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its Identor Element, which applies a name or identifier.</para>
              <para>Type: FactorUsesIdentor</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromOneOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabIdentorStep.UsesIdentorType">
            <summary>
              Links an Identor to an IdentorType that specifies the value's purpose or intent. (OutToOne FabIdentorType)
            </summary>
            <remarks>
              <para>Links an Identor to an IdentorType that specifies the value's purpose or intent.</para>
              <para>Type: IdentorUsesIdentorType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabIdentorTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabIdentorTypeStep.InIdentorListUses">
            <summary>
              Links an Identor to an IdentorType that specifies the value's purpose or intent. (InFromZeroOrMore FabIdentor)
            </summary>
            <remarks>
              <para>Links an Identor to an IdentorType that specifies the value's purpose or intent.</para>
              <para>Type: IdentorUsesIdentorType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabInstanceStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabInstanceStep.HasArtifact">
            <summary>
              Links an App to the Instance that it owns. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links an App to the Instance that it owns.</para>
              <para>Type: InstanceHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabLocatorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabLocatorStep.InFactorListUses">
            <summary>
              Links a Factor to its Locator Element, which provides a geographical or relative position. (InFromOneOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its Locator Element, which provides a geographical or relative position.</para>
              <para>Type: FactorUsesLocator</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromOneOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabLocatorStep.UsesLocatorType">
            <summary>
              Links a Locator to a LocatorType that specifies the spatial context of the coordinate. (OutToOne FabLocatorType)
            </summary>
            <remarks>
              <para>Links a Locator to a LocatorType that specifies the spatial context of the coordinate.</para>
              <para>Type: LocatorUsesLocatorType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabLocatorTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabLocatorTypeStep.InLocatorListUses">
            <summary>
              Links a Locator to a LocatorType that specifies the spatial context of the coordinate. (InFromZeroOrMore FabLocator)
            </summary>
            <remarks>
              <para>Links a Locator to a LocatorType that specifies the spatial context of the coordinate.</para>
              <para>Type: LocatorUsesLocatorType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabMemberStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.InAppDefines">
            <summary>
              Links an App to a particular Member. (InFromOne FabApp)
            </summary>
            <remarks>
              <para>Links an App to a particular Member.</para>
              <para>Type: AppDefinesMember</para>
              <para>Relation: Defines</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.HasMemberTypeAssign">
            <summary>
              Links a Member to its active MemberTypeAssign. (OutToOne FabMemberTypeAssign)
            </summary>
            <remarks>
              <para>Links a Member to its active MemberTypeAssign.</para>
              <para>Type: MemberHasMemberTypeAssign</para>
              <para>Relation: Has</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.HasHistoricMemberTypeAssignList">
            <summary>
              Links a Member to a historical MemberTypeAssign. (OutToZeroOrMore FabMemberTypeAssign)
            </summary>
            <remarks>
              <para>Links a Member to a historical MemberTypeAssign.</para>
              <para>Type: MemberHasHistoricMemberTypeAssign</para>
              <para>Relation: HasHistoric</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.CreatesArtifactList">
            <summary>
              Links a Member to the Artifact that it created. (OutToZeroOrMore FabArtifact)
            </summary>
            <remarks>
              <para>Links a Member to the Artifact that it created.</para>
              <para>Type: MemberCreatesArtifact</para>
              <para>Relation: Creates</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.CreatesMemberTypeAssignList">
            <summary>
              Links a Member to the MemberTypeAssign that it created. (OutToZeroOrMore FabMemberTypeAssign)
            </summary>
            <remarks>
              <para>Links a Member to the MemberTypeAssign that it created.</para>
              <para>Type: MemberCreatesMemberTypeAssign</para>
              <para>Relation: Creates</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.CreatesFactorList">
            <summary>
              Links a Member to the Factor that it created. (OutToZeroOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Member to the Factor that it created.</para>
              <para>Type: MemberCreatesFactor</para>
              <para>Relation: Creates</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberStep.InUserDefines">
            <summary>
              Links a User to a particular Member. (InFromOne FabUser)
            </summary>
            <remarks>
              <para>Links a User to a particular Member.</para>
              <para>Type: UserDefinesMember</para>
              <para>Relation: Defines</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabMemberTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberTypeStep.InMemberTypeAssignListUses">
            <summary>
              Links a MemberTypeAssign to a MemberType that specifies the Member's state and/or access privileges. (InFromZeroOrMore FabMemberTypeAssign)
            </summary>
            <remarks>
              <para>Links a MemberTypeAssign to a MemberType that specifies the Member's state and/or access privileges.</para>
              <para>Type: MemberTypeAssignUsesMemberType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabMemberTypeAssignStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberTypeAssignStep.InMemberHas">
            <summary>
              Links a Member to its active MemberTypeAssign. (InFromOne FabMember)
            </summary>
            <remarks>
              <para>Links a Member to its active MemberTypeAssign.</para>
              <para>Type: MemberHasMemberTypeAssign</para>
              <para>Relation: Has</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberTypeAssignStep.InMemberHasHistoric">
            <summary>
              Links a Member to a historical MemberTypeAssign. (InFromOne FabMember)
            </summary>
            <remarks>
              <para>Links a Member to a historical MemberTypeAssign.</para>
              <para>Type: MemberHasHistoricMemberTypeAssign</para>
              <para>Relation: HasHistoric</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberTypeAssignStep.InMemberCreates">
            <summary>
              Links a Member to the MemberTypeAssign that it created. (InFromOne FabMember)
            </summary>
            <remarks>
              <para>Links a Member to the MemberTypeAssign that it created.</para>
              <para>Type: MemberCreatesMemberTypeAssign</para>
              <para>Relation: Creates</para>
              <para>Connection: InFromOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabMemberTypeAssignStep.UsesMemberType">
            <summary>
              Links a MemberTypeAssign to a MemberType that specifies the Member's state and/or access privileges. (OutToOne FabMemberType)
            </summary>
            <remarks>
              <para>Links a MemberTypeAssign to a MemberType that specifies the Member's state and/or access privileges.</para>
              <para>Type: MemberTypeAssignUsesMemberType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabRootStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsAppList">
            <summary>
              Links the Root node to an App. (OutToZeroOrMore FabApp)
            </summary>
            <remarks>
              <para>Links the Root node to an App.</para>
              <para>Type: RootContainsApp</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsArtifactList">
            <summary>
              Links the Root node to an Artifact. (OutToZeroOrMore FabArtifact)
            </summary>
            <remarks>
              <para>Links the Root node to an Artifact.</para>
              <para>Type: RootContainsArtifact</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsArtifactTypeList">
            <summary>
              Links the Root node to an ArtifactType. (OutToZeroOrMore FabArtifactType)
            </summary>
            <remarks>
              <para>Links the Root node to an ArtifactType.</para>
              <para>Type: RootContainsArtifactType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsClassList">
            <summary>
              Links the Root node to a Class. (OutToZeroOrMore FabClass)
            </summary>
            <remarks>
              <para>Links the Root node to a Class.</para>
              <para>Type: RootContainsClass</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsInstanceList">
            <summary>
              Links the Root node to an Instance. (OutToZeroOrMore FabInstance)
            </summary>
            <remarks>
              <para>Links the Root node to an Instance.</para>
              <para>Type: RootContainsInstance</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsMemberList">
            <summary>
              Links the Root node to a Member. (OutToZeroOrMore FabMember)
            </summary>
            <remarks>
              <para>Links the Root node to a Member.</para>
              <para>Type: RootContainsMember</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsMemberTypeList">
            <summary>
              Links the Root node to a MemberType. (OutToZeroOrMore FabMemberType)
            </summary>
            <remarks>
              <para>Links the Root node to a MemberType.</para>
              <para>Type: RootContainsMemberType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsMemberTypeAssignList">
            <summary>
              Links the Root node to a MemberTypeAssign. (OutToZeroOrMore FabMemberTypeAssign)
            </summary>
            <remarks>
              <para>Links the Root node to a MemberTypeAssign.</para>
              <para>Type: RootContainsMemberTypeAssign</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsUrlList">
            <summary>
              Links the Root node to a Url. (OutToZeroOrMore FabUrl)
            </summary>
            <remarks>
              <para>Links the Root node to a Url.</para>
              <para>Type: RootContainsUrl</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsUserList">
            <summary>
              Links the Root node to a User. (OutToZeroOrMore FabUser)
            </summary>
            <remarks>
              <para>Links the Root node to a User.</para>
              <para>Type: RootContainsUser</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsFactorList">
            <summary>
              Links the Root node to a Factor. (OutToZeroOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links the Root node to a Factor.</para>
              <para>Type: RootContainsFactor</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsFactorAssertionList">
            <summary>
              Links the Root node to a FactorAssertion. (OutToZeroOrMore FabFactorAssertion)
            </summary>
            <remarks>
              <para>Links the Root node to a FactorAssertion.</para>
              <para>Type: RootContainsFactorAssertion</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsDescriptorList">
            <summary>
              Links the Root node to a Descriptor. (OutToZeroOrMore FabDescriptor)
            </summary>
            <remarks>
              <para>Links the Root node to a Descriptor.</para>
              <para>Type: RootContainsDescriptor</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsDescriptorTypeList">
            <summary>
              Links the Root node to a DescriptorType. (OutToZeroOrMore FabDescriptorType)
            </summary>
            <remarks>
              <para>Links the Root node to a DescriptorType.</para>
              <para>Type: RootContainsDescriptorType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsDirectorList">
            <summary>
              Links the Root node to a Director. (OutToZeroOrMore FabDirector)
            </summary>
            <remarks>
              <para>Links the Root node to a Director.</para>
              <para>Type: RootContainsDirector</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsDirectorTypeList">
            <summary>
              Links the Root node to a DirectorType. (OutToZeroOrMore FabDirectorType)
            </summary>
            <remarks>
              <para>Links the Root node to a DirectorType.</para>
              <para>Type: RootContainsDirectorType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsDirectorActionList">
            <summary>
              Links the Root node to a DirectorAction. (OutToZeroOrMore FabDirectorAction)
            </summary>
            <remarks>
              <para>Links the Root node to a DirectorAction.</para>
              <para>Type: RootContainsDirectorAction</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsEventorList">
            <summary>
              Links the Root node to an Eventor. (OutToZeroOrMore FabEventor)
            </summary>
            <remarks>
              <para>Links the Root node to an Eventor.</para>
              <para>Type: RootContainsEventor</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsEventorTypeList">
            <summary>
              Links the Root node to an EventorType. (OutToZeroOrMore FabEventorType)
            </summary>
            <remarks>
              <para>Links the Root node to an EventorType.</para>
              <para>Type: RootContainsEventorType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsEventorPrecisionList">
            <summary>
              Links the Root node to an EventorPrecision. (OutToZeroOrMore FabEventorPrecision)
            </summary>
            <remarks>
              <para>Links the Root node to an EventorPrecision.</para>
              <para>Type: RootContainsEventorPrecision</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsIdentorList">
            <summary>
              Links the Root node to an Identor. (OutToZeroOrMore FabIdentor)
            </summary>
            <remarks>
              <para>Links the Root node to an Identor.</para>
              <para>Type: RootContainsIdentor</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsIdentorTypeList">
            <summary>
              Links the Root node to an IdentorType. (OutToZeroOrMore FabIdentorType)
            </summary>
            <remarks>
              <para>Links the Root node to an IdentorType.</para>
              <para>Type: RootContainsIdentorType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsLocatorList">
            <summary>
              Links the Root node to a Locator. (OutToZeroOrMore FabLocator)
            </summary>
            <remarks>
              <para>Links the Root node to a Locator.</para>
              <para>Type: RootContainsLocator</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsLocatorTypeList">
            <summary>
              Links the Root node to a LocatorType. (OutToZeroOrMore FabLocatorType)
            </summary>
            <remarks>
              <para>Links the Root node to a LocatorType.</para>
              <para>Type: RootContainsLocatorType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorList">
            <summary>
              Links the Root node to a Vector. (OutToZeroOrMore FabVector)
            </summary>
            <remarks>
              <para>Links the Root node to a Vector.</para>
              <para>Type: RootContainsVector</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorTypeList">
            <summary>
              Links the Root node to a VectorType. (OutToZeroOrMore FabVectorType)
            </summary>
            <remarks>
              <para>Links the Root node to a VectorType.</para>
              <para>Type: RootContainsVectorType</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorRangeList">
            <summary>
              Links the Root node to a VectorRange. (OutToZeroOrMore FabVectorRange)
            </summary>
            <remarks>
              <para>Links the Root node to a VectorRange.</para>
              <para>Type: RootContainsVectorRange</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorRangeLevelList">
            <summary>
              Links the Root node to a VectorRangeLevel. (OutToZeroOrMore FabVectorRangeLevel)
            </summary>
            <remarks>
              <para>Links the Root node to a VectorRangeLevel.</para>
              <para>Type: RootContainsVectorRangeLevel</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorUnitList">
            <summary>
              Links the Root node to a VectorUnit. (OutToZeroOrMore FabVectorUnit)
            </summary>
            <remarks>
              <para>Links the Root node to a VectorUnit.</para>
              <para>Type: RootContainsVectorUnit</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorUnitPrefixList">
            <summary>
              Links the Root node to a VectorUnitPrefix. (OutToZeroOrMore FabVectorUnitPrefix)
            </summary>
            <remarks>
              <para>Links the Root node to a VectorUnitPrefix.</para>
              <para>Type: RootContainsVectorUnitPrefix</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabRootStep.ContainsVectorUnitDerivedList">
            <summary>
              Links the Root node to a VectorUnitDerived. (OutToZeroOrMore FabVectorUnitDerived)
            </summary>
            <remarks>
              <para>Links the Root node to a VectorUnitDerived.</para>
              <para>Type: RootContainsVectorUnitDerived</para>
              <para>Relation: Contains</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabUrlStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabUrlStep.HasArtifact">
            <summary>
              Links a Url to the Artifact that it owns. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Url to the Artifact that it owns.</para>
              <para>Type: UrlHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabUserStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabUserStep.HasArtifact">
            <summary>
              Links a User to the Artifact that it owns. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a User to the Artifact that it owns.</para>
              <para>Type: UserHasArtifact</para>
              <para>Relation: Has</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabUserStep.DefinesMemberList">
            <summary>
              Links a User to a particular Member. (OutToOneOrMore FabMember)
            </summary>
            <remarks>
              <para>Links a User to a particular Member.</para>
              <para>Type: UserDefinesMember</para>
              <para>Relation: Defines</para>
              <para>Connection: OutToOneOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorStep.InFactorListUses">
            <summary>
              Links a Factor to its Vector Element, which applies a numeric axis and value. (InFromOneOrMore FabFactor)
            </summary>
            <remarks>
              <para>Links a Factor to its Vector Element, which applies a numeric axis and value.</para>
              <para>Type: FactorUsesVector</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromOneOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorStep.UsesAxisArtifact">
            <summary>
              Links a Vector to an Artifact that 'labels' its value's axis. (OutToOne FabArtifact)
            </summary>
            <remarks>
              <para>Links a Vector to an Artifact that 'labels' its value's axis.</para>
              <para>Type: VectorUsesAxisArtifact</para>
              <para>Relation: UsesAxis</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorStep.UsesVectorType">
            <summary>
              Links a Vector to a VectorType that specifies its value's boundaries and context. (OutToOne FabVectorType)
            </summary>
            <remarks>
              <para>Links a Vector to a VectorType that specifies its value's boundaries and context.</para>
              <para>Type: VectorUsesVectorType</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorStep.UsesVectorUnit">
            <summary>
              Links a Vector to a VectorUnit that specifies its value's unit of measurement. (OutToOne FabVectorUnit)
            </summary>
            <remarks>
              <para>Links a Vector to a VectorUnit that specifies its value's unit of measurement.</para>
              <para>Type: VectorUsesVectorUnit</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorStep.UsesVectorUnitPrefix">
            <summary>
              Links a Vector to a VectorUnitPrefix that specifies its value's order of magnitude. (OutToOne FabVectorUnitPrefix)
            </summary>
            <remarks>
              <para>Links a Vector to a VectorUnitPrefix that specifies its value's order of magnitude.</para>
              <para>Type: VectorUsesVectorUnitPrefix</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorRangeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorRangeStep.InVectorTypeListUses">
            <summary>
              Links a VectorType to a VectorRange that specifies a meaningful points/labels mapped to the numerical range. (InFromZeroOrMore FabVectorType)
            </summary>
            <remarks>
              <para>Links a VectorType to a VectorRange that specifies a meaningful points/labels mapped to the numerical range.</para>
              <para>Type: VectorTypeUsesVectorRange</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorRangeStep.UsesVectorRangeLevelList">
            <summary>
              Links a VectorRange to one of the VectorRangeLevels that help give it meaning. (OutToZeroOrMore FabVectorRangeLevel)
            </summary>
            <remarks>
              <para>Links a VectorRange to one of the VectorRangeLevels that help give it meaning.</para>
              <para>Type: VectorRangeUsesVectorRangeLevel</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorRangeLevelStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorRangeLevelStep.InVectorRangeListUses">
            <summary>
              Links a VectorRange to one of the VectorRangeLevels that help give it meaning. (InFromZeroOrMore FabVectorRange)
            </summary>
            <remarks>
              <para>Links a VectorRange to one of the VectorRangeLevels that help give it meaning.</para>
              <para>Type: VectorRangeUsesVectorRangeLevel</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorTypeStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorTypeStep.InVectorListUses">
            <summary>
              Links a Vector to a VectorType that specifies its value's boundaries and context. (InFromZeroOrMore FabVector)
            </summary>
            <remarks>
              <para>Links a Vector to a VectorType that specifies its value's boundaries and context.</para>
              <para>Type: VectorUsesVectorType</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorTypeStep.UsesVectorRange">
            <summary>
              Links a VectorType to a VectorRange that specifies a meaningful points/labels mapped to the numerical range. (OutToOne FabVectorRange)
            </summary>
            <remarks>
              <para>Links a VectorType to a VectorRange that specifies a meaningful points/labels mapped to the numerical range.</para>
              <para>Type: VectorTypeUsesVectorRange</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorUnitStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitStep.InVectorListUses">
            <summary>
              Links a Vector to a VectorUnit that specifies its value's unit of measurement. (InFromZeroOrMore FabVector)
            </summary>
            <remarks>
              <para>Links a Vector to a VectorUnit that specifies its value's unit of measurement.</para>
              <para>Type: VectorUsesVectorUnit</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitStep.InVectorUnitDerivedListDefines">
            <summary>
              TODO (InFromZeroOrMore FabVectorUnitDerived)
            </summary>
            <remarks>
              <para>TODO</para>
              <para>Type: VectorUnitDerivedDefinesVectorUnit</para>
              <para>Relation: Defines</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitStep.InVectorUnitDerivedListRaisesToExp">
            <summary>
              TODO (InFromZeroOrMore FabVectorUnitDerived)
            </summary>
            <remarks>
              <para>TODO</para>
              <para>Type: VectorUnitDerivedRaisesToExpVectorUnit</para>
              <para>Relation: RaisesToExp</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorUnitDerivedStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitDerivedStep.DefinesVectorUnit">
            <summary>
              TODO (OutToOne FabVectorUnit)
            </summary>
            <remarks>
              <para>TODO</para>
              <para>Type: VectorUnitDerivedDefinesVectorUnit</para>
              <para>Relation: Defines</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitDerivedStep.RaisesToExpVectorUnit">
            <summary>
              TODO (OutToOne FabVectorUnit)
            </summary>
            <remarks>
              <para>TODO</para>
              <para>Type: VectorUnitDerivedRaisesToExpVectorUnit</para>
              <para>Relation: RaisesToExp</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitDerivedStep.UsesVectorUnitPrefix">
            <summary>
              TODO (OutToOne FabVectorUnitPrefix)
            </summary>
            <remarks>
              <para>TODO</para>
              <para>Type: VectorUnitDerivedUsesVectorUnitPrefix</para>
              <para>Relation: Uses</para>
              <para>Connection: OutToOne</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.IFabVectorUnitPrefixStep">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitPrefixStep.InVectorListUses">
            <summary>
              Links a Vector to a VectorUnitPrefix that specifies its value's order of magnitude. (InFromZeroOrMore FabVector)
            </summary>
            <remarks>
              <para>Links a Vector to a VectorUnitPrefix that specifies its value's order of magnitude.</para>
              <para>Type: VectorUsesVectorUnitPrefix</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.IFabVectorUnitPrefixStep.InVectorUnitDerivedListUses">
            <summary>
              TODO (InFromZeroOrMore FabVectorUnitDerived)
            </summary>
            <remarks>
              <para>TODO</para>
              <para>Type: VectorUnitDerivedUsesVectorUnitPrefix</para>
              <para>Relation: Uses</para>
              <para>Connection: InFromZeroOrMore</para>
            </remarks>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalFuncs.As(System.String)">
            <summary>
              TODO
            </summary>
            <param name="Alias">
              TODO
            </param>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalFuncs.Back(System.String)">
            <summary>
              TODO
            </summary>
            <param name="Alias">
              TODO
            </param>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalFuncs.Limit(System.Int64,System.Int32)">
            <summary>
              TODO
            </summary>
            <param name="Index">
              TODO
            </param>
            <param name="Count">
              TODO
            </param>
        </member>
        <member name="M:Fabric.Clients.Cs.Api.TraversalFuncs.WhereId(System.Int64)">
            <summary>
              TODO
            </summary>
            <param name="Id">
              TODO
            </param>
        </member>
        <member name="T:Fabric.Clients.Cs.Session.FabricSessionContainer">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.Session.FabricSessionContainer.Person">
            <summary />
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabApp">
            <summary>
              A registered project, application, or business that has direct access to the Fabric API. An App's primary purpose is to facilitate User interaction with Fabric.
            </summary>
            <remarks>
              <para>A registered project, application, or business that has direct access to the Fabric API.</para>
              <para>An App's primary purpose is to facilitate User interaction with Fabric. To accomplish this, an App typically creates an interface for its Users. This interface hides the complex details of the Fabric API, and instead provides intuitive features like custom inputs, searches, summaries, and visualizations. </para>
              <para>When a User becomes a Member of an App, they are granting that App permission to perform various actions on their behalf (via the App's interface). It is vital for an App to provide each User with a positive experience and do nothing to violate the User's trust.</para>
              <para>Every App has a special 'Data Provider' Member, which is typically controlled by that App's administrator. The 'Data Provider' allows the App to interact with Fabric as itself (rather than on behalf of a particular User).</para>
              <para>Every item added to Fabric is associated with (via Member) a User and and an App. Thus, Fabric can determine which App is responsible for any particular item, enforce applicable access rights, analyze the data for a particular App or Member, etc.</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabArtifactOwnerNode">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabNode">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabObject">
            <summary>
              The base class for all Objects returned by Fabric's services.
            </summary>
            <remarks>
              <para>The base class for all Objects returned by Fabric's services.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabObject.FabType">
            <summary>
              The data type of this object.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabNode.Uri">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabApp.AppId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabApp.Name">
            <summary>
              A unique title or identifier.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabArtifact">
            <summary>
              An object which is able to (via Factor connections) accumulate meaning, context, user sentiment, and relationships.
            </summary>
            <remarks>
              <para>An object which is able to (via Factor connections) accumulate meaning, context, user sentiment, and relationships.  Artifacts and Factors are the central components of the Fabric architecture.</para>
              <para>Every Artifact maps exclusively to one other item in the Fabric architecture (such as an App, Class, Instance, or User). Fabric generates an Artifact automatically each time a new Artifact-enabled item is created.  Technically, each of these items 'has' an associated Artifact. However, due to the item's exclusive ownership, it is conceptually correct to say that each of these items 'is' an Artifact.</para>
              <para>There are no restrictions on what an Artifact can represent.  Fabric encourages the generous use of Factors to identify and describe each new Artifact. Ideally, the Factor connections will distinguish an Artifact from all others.</para>
              <para>Each Artifact is linked to exactly one ArtifactOwnerNode item, where the type of this item is specified by the ArtifactType.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabArtifact.ArtifactId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabArtifact.Created">
            <summary>
              The date/time of creation.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabArtifact.IsPrivate">
            <summary>
              Specifies the accessibility level.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabArtifactType">
            <summary>
              Describes the object type associated with a particular Artifact.
            </summary>
            <remarks>
              <para>Describes the object type associated with a particular Artifact. Example types include: App, Class, Instance, etc.</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabNodeForType">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabNodeForType.Description">
            <summary>
              A summary of this object's intended meaning or purpose.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabNodeForType.Name">
            <summary>
              A descriptive name or title.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabArtifactType.ArtifactTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabBatchNewClass">
            <summary>
              MISSING:BatchNewClass
            </summary>
            <remarks>
              <para>MISSING:BatchNewClass</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabBatchNewObject">
            <summary>
              MISSING:BatchNewObject
            </summary>
            <remarks>
              <para>MISSING:BatchNewObject</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchNewObject.BatchId">
            <summary>
              MISSING:BatchNewObject_BatchId
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchNewClass.Disamb">
            <summary>
              MISSING:BatchNewClass_Disamb
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchNewClass.Name">
            <summary>
              MISSING:BatchNewClass_Name
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchNewClass.Note">
            <summary>
              MISSING:BatchNewClass_Note
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabBatchResult">
            <summary>
              MISSING:BatchResult
            </summary>
            <remarks>
              <para>MISSING:BatchResult</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchResult.BatchId">
            <summary>
              MISSING:BatchResult_BatchId
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchResult.Error">
            <summary>
              MISSING:BatchResult_Error
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabBatchResult.ResultId">
            <summary>
              MISSING:BatchResult_ResultId
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabClass">
            <summary>
              Represents any item (real, imaginary, virtual, conceptual, or otherwise) that an App or User can define and/or use to generate meaning.
            </summary>
            <remarks>
              <para>Represents any item (real, imaginary, virtual, conceptual, or otherwise) that an App or User can define and/or use to generate meaning. Classes and Instances are closely related, and are the primary method for generating new Artifacts.</para>
              <para>Documentation Note: To explain the Class object more intuitively, this documentation simplifies some concepts of the Fabric architecture. Please be aware of the full complexity:</para>
              <para>- A Class receives Factors via its associated Artifact.</para>
              <para>- Each Factor references two Artifacts, which creates a relationship between them.</para>
              <para>- An 'is a' relationship refers to a Factor that uses an 'Is A' Descriptor.</para>
              <para>A Class represents a particular group, type, set, or category of items. Each Class must uniquely identifiable (via name and disambiguation) amonst all other Classes. An Artifact (of any type) can only have 'is a' relationships with Classes.</para>
              <para>Ellie's Class Example: Ellie is building an App for dog lovers, but there are not yet animal-related Classes for Ellie to use. She first creates broad Classes (like 'Animal', 'Mammal', and 'Canine') and relationships between them (like 'Canine is a Mammal').</para>
              <para>She then creates narrower Classes for each dog grouping (like 'Working Dog') and breed (like 'Great Dane'), adding relevant relationships along the way. A Class named 'Boxer' already exists, but it has a sports-related meaning. She adds a new 'Boxer' Class with a 'Dog Breed' disambiguation value to resolve this conflict.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabClass.ClassId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabClass.Disamb">
            <summary>
              A secondary label or identifier, used to resolve unique-name conflicts.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabClass.Name">
            <summary>
              A descriptive name or title.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabClass.Note">
            <summary>
              A summary of the Class's intended meaning or purpose.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabDescriptor">
            <summary>
              Describes and refines the relationship between the two Artifacts of a particular Factor. The primary purpose of a Descriptor is to describe the relationship between a Factor's primary Artifact and related Artifact.
            </summary>
            <remarks>
              <para>Describes and refines the relationship between the two Artifacts of a particular Factor.</para>
              <para>The primary purpose of a Descriptor is to describe the relationship between a Factor's primary Artifact and related Artifact. The DescriptorType provides this description, establishing meaningful connections like a A 'is a' B, or C 'sounds like' D.</para>
              <para>The Artifact relationship (defined by a Factor) is directional, flowing from the primary Artifact to the related Artifact. The DescriptorType, therefore, must coordinate with the relationship's direction.</para>
              <para>Relationship Example: Objective:</para>
              <para>Describe that a circle is a shape. </para>
              <para>Method:</para>
              <para>- The Factor uses 'Circle' as the primary Artifact and 'Shape' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Is A' DescriptorType.</para>
              <para>Factor Phrase:</para>
              <para>Circle ... Is A ... Shape.</para>
              <para>Descriptors also offer optional (but powerful) refinement capabilities, which allow a Descriptor to be very specific. Using any available Artifact, a Descriptor may refine the DescriptorType, the Factor's primary Artifact, and/or the Factor's related Artifact.</para>
              <para>Refinement Example: Objective:</para>
              <para>Describe that car A and car B have headlights with a similar shape.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Car A' as the primary Artifact and 'Car B' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Is Similar To' DescriptorType, uses 'Headlight' to refine both Artifacts, and uses 'Shape' to refine the DescriptorType.</para>
              <para>Factor Phrase:</para>
              <para>Car A (more specifically, its) Headlight ... Is Similar To (more specifically, by) Shape ... Car B (more specifically, its) Headlight.</para>
              <para>Descriptors are the only required Factor Element. If a Factor is completed without a Descriptor, Fabric automatically attaches one. The default Descriptor uses the 'Is Related To' DescriptorType with no refinements.</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabFactorElementNode">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabDescriptor.DescriptorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabDescriptorType">
            <summary>
              Provides meaning (via Descriptor) to the relationship between the two Artifacts in a particular Factor.
            </summary>
            <remarks>
              <para>Provides meaning (via Descriptor) to the relationship between the two Artifacts in a particular Factor. Example types include: Is A, Refers To, Sounds Like, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabDescriptorType.DescriptorTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabDirector">
            <summary>
              Creates a directional, action-based pathway between the two Artifacts of a particular Factor. The nature of a Director's pathway depends on its DirectorType.
            </summary>
            <remarks>
              <para>Creates a directional, action-based pathway between the two Artifacts of a particular Factor.</para>
              <para>The nature of a Director's pathway depends on its DirectorType. The Director can  represent a factual, well-defined path, a virtual link, a suggested flow, etc.</para>
              <para>A Director specifies a DirectorAction for each of the Factor's Artifacts, which give additional meaning to the Director's pathway. The primary action is meant to be performed on the primary Artifact before the pathway begins. The related action is meant to be performed on the related Artifact after the pathway ends.</para>
              <para>Defined Pathway Example: Objective:</para>
              <para>Direct along the defined pathway of listening to a particular album's third and fourth songs (song C and D) in order.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Song C' as the primary Artifact and 'Song D' as the related Artifact.</para>
              <para>- The Descriptor, by default, uses the 'IsRelatedTo' DescriptorType.</para>
              <para>- The Director uses the 'Defined Path' DirectorType and the 'Listen' DirectorAction for each Artifact.</para>
              <para>Factor Phrase:</para>
              <para>Song C ... Is Related To ... Song D. (Performing the) Listen (action on) ... Song C ... (leads via) Defined Path (toward) ... (performing the) Listen (action on) ... Song D. Suggested Pathway Example: Objective:</para>
              <para>Direct along a suggested pathway of listening to song A and then learning about that song's vocalist, singer B.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Song A' as the primary Artifact and 'Singer B' as the related Artifact.</para>
              <para>- The Descriptor, by default, uses the 'IsRelatedTo' DescriptorType.</para>
              <para>- The Director uses the 'Suggested Path' DirectorType, the 'Listen' primary DirectorAction, and the 'Learn' related DirectorAction.</para>
              <para>Factor Phrase:</para>
              <para>Song A ... Is Related To ... Song B.  (Performing the) Listen (action on) ... Song A ... (leads via) Suggested Path (toward) ... (performing the) Learn (action on) ... Singer B.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabDirector.DirectorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabDirectorAction">
            <summary>
              Describes an action to be taken (via Director) on one of the two Artifacts in a particular Factor.
            </summary>
            <remarks>
              <para>Describes an action to be taken (via Director) on one of the two Artifacts in a particular Factor. Example actions include: Read, Learn, Obtain, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabDirectorAction.DirectorActionId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabDirectorType">
            <summary>
              Provides meaning (via Director) to the directional connection between the two Artifacts in a particular Factor.
            </summary>
            <remarks>
              <para>Provides meaning (via Director) to the directional connection between the two Artifacts in a particular Factor. Example types include: Hyperlink, Suggested Path, Defined Path, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabDirectorType.DirectorTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabError">
            <summary>
              When a fault or error occurs, a FabError is returned in place of the expected response data.
            </summary>
            <remarks>
              <para>When a fault or error occurs, a FabError is returned in place of the expected response data. The information it provides should help determine what caused the issue for the given request.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabError.Code">
            <summary>
              A numeric value which identifies the specific error type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabError.Message">
            <summary>
              A sentence or paragraph providing details about the error.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabError.Name">
            <summary>
              A descriptive name that is associated with the error code.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabEventor">
            <summary>
              Applies the concept of time to a particular Factor. An Eventor places a Factor at a specific point in time and describes why it is significant to the Factor.
            </summary>
            <remarks>
              <para>Applies the concept of time to a particular Factor.</para>
              <para>An Eventor places a Factor at a specific point in time and describes why it is significant to the Factor. The EventorType provides this significance, establishing that this particular point in time is when the Factor started, occurred, is expected, etc.</para>
              <para>Each Eventor represents one particular point in time, however, the precision of that point in time can vary. The EventorPrecision allows a point in time to specify a level of accuracy ranging from one second to one year.</para>
              <para>Started Example: Objective:</para>
              <para>Specify that Albert Einstein was born (i.e. started his life) on March 14, 1879.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Albert Einstein' as the primary Artifact and 'Life' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Has A' DescriptorType.</para>
              <para>- The Eventor uses 'March 14, 1879' as its DateTime value, the 'Started' EventorType, and the 'Day' EventorPrecision.</para>
              <para>Factor Phrase:</para>
              <para>Albert Einstein ... Has A ... Life, ... (an event which) Started ... (on the) Day ... March 14, 1879. Expected Example: Objective:</para>
              <para>Specify that person A plans to attend college B in the year 2024.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Person A' as the primary Artifact and 'College B' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Participates In' DescriptorType and the 'Attend' Artifact to refine it.</para>
              <para>- The Eventor uses '2024' as its DateTime value, the 'Is Expected' EventorType, and the 'Year' EventorPrecision.</para>
              <para>Factor Phrase:</para>
              <para>Person A ... Participates In (more specifically, by) Attend(ing) ... College B, ... (an event which) Is Expected (to occur) ... (in the) Year ... 2024.</para>
              <para>Note: every Factor recieves a timestamp upon creation. This timestamp is not related to the Eventor.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabEventor.DateTime">
            <summary>
              A particular point in time, with a level of accuracy defined by EventorPrecision.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabEventor.EventorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabEventorPrecision">
            <summary>
              Describes the level of date/time precision (via Eventor) given to a particular Factor.
            </summary>
            <remarks>
              <para>Describes the level of date/time precision (via Eventor) given to a particular Factor. Example precisions include: Year, Day, Second, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabEventorPrecision.EventorPrecisionId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabEventorType">
            <summary>
              Provides temporal significance (via Eventor) for a particular Factor.
            </summary>
            <remarks>
              <para>Provides temporal significance (via Eventor) for a particular Factor.  Example types include: Start, Occur, Expected, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabEventorType.EventorTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabFactor">
            <summary>
              Provides a specific piece of information, knowledge, or opinion about a pair of Artifacts.
            </summary>
            <remarks>
              <para>Provides a specific piece of information, knowledge, or opinion about a pair of Artifacts. Factors and Artifacts are the central components of the Fabric architecture.</para>
              <para>A Factor forms a directional relationship from its primary Artifact to its related Artifact. There are various Factor-related components (known as Factor Elements) available. Each has a specific ability to refine, describe, and/or supplement this Artifact relationship in a meaningful way.</para>
              <para>The six Factor Elements are called Descriptor, Director, Eventor, Identor, Locator, and Vector. The Descriptor is the only required Element; the rest are optional. A Factor typically uses one or two Elements, but (in very complex cases) could potentially use four or more.</para>
              <para>Just as there are no restrictions on what a particular Artifact can represent, there are no restrictions on the type of meaning or information a Factors can provide. The FactorAssertionKey allows a Factor to specify that it represents (among other things) a fact or an opinion. This level of confidence for a particular Factor allows Users and Apps to more effectively find the type of information they desire.</para>
              <para>Each Factor has a trio of boolean states. IsComplete states whether the Factor is completed or still under construction. IsDefining states whether the Factor is a vital piece of data, which could be useful in uniquely identifying the primary Artifact. IsPublic states whether the Factor is public (available to all Apps and Users) or not. Non-public Factors are primarily accessible to the App responsible for creating it, but may be accessible by other Apps which have certain access rights.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabFactor.Completed">
            <summary>
              The date/time of completion.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabFactor.Created">
            <summary>
              The date/time of creation.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabFactor.FactorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabFactor.IsDefining">
            <summary>
              Specifies whether this Factor helps to uniquely define the primary Artifact.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabFactor.Note">
            <summary>
              A summary of the Factor's intended meaning or purpose.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabFactorAssertion">
            <summary>
              Describes the type of information (and/or level of confidence) provided by a particular Factor.
            </summary>
            <remarks>
              <para>Describes the type of information (and/or level of confidence) provided by a particular Factor. Example assertions include: Fact, Opinion, Guess, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabFactorAssertion.FactorAssertionId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabHome">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabHome.Services">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabIdentor">
            <summary>
              Applies a name or identifier to a particular Factor. An Identor attaches a text-based value to a Factor.
            </summary>
            <remarks>
              <para>Applies a name or identifier to a particular Factor.</para>
              <para>An Identor attaches a text-based value to a Factor. This value can represent a a full name, a nickname, a globally-unique identifier, a reference key to some other system, etc.</para>
              <para>The IdentorType hints at the purpose or intent of the Identor. A 'Text' IdentorType is typically meant to provide enhanced search capabilities (like finding a person by an alternate name) or some other organizational use.  A 'Key' IdentorType is typically meant to associate a Factor with some external system (like a Product ID from an online store) or to provide an App with a 'reverse lookup' for their own internal IDs.</para>
              <para>Alternate Name Example: Objective:</para>
              <para>Identify that Grand Valley State University is also known as (has the alternate name of) 'Grand Valley'.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Grand Valley State University' as the primary Artifact and 'Name' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Has A' DescriptorType, and an 'Alternative' Artifact to refine the Factor's related Artifact.</para>
              <para>- The Identor uses 'Grand Valley' as its text value, and the 'Text' IdentorType.</para>
              <para>Factor Phrase:</para>
              <para>Grand Valley State University ... Has A ... Name (more specifically, an) Alternative, ... (identified by the) Text ... 'Grand Valley'. Abbreviation Example: Objective:</para>
              <para>Identify that Grand Valley State University is also known as (has the abbreviation of) 'GVSU'.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Grand Valley State University' as the primary Artifact and 'Abbreviation' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Has A' DescriptorType.</para>
              <para>- The Identor uses 'GVSU' as its text value, and the 'Text' IdentorType.</para>
              <para>Factor Phrase:</para>
              <para>Grand Valley State University ... Has A(n) ... Abbreviation, ... (identified by the) Text ... 'GVSU'. Identifier Example: Objective:</para>
              <para>Identify that game A is accessible in store B via its ID, which is '123a-45678'.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Game A' as the primary Artifact and 'Store B' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Is Found In' DescriptorType.</para>
              <para>- The Identor uses '123a-45678' as its text value, and the 'Key' IdentorType.</para>
              <para>Factor Phrase:</para>
              <para>Game A ... Is Found In ... Store B, ... (identified by the) Key ... '123a-45678'.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabIdentor.IdentorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabIdentor.Value">
            <summary>
              A text-based value that can represent names, numbers, IDs, GUIDs, etc.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabIdentorType">
            <summary>
              Provides a hint about the text (via Identor) that identifies a particular Factor.
            </summary>
            <remarks>
              <para>Provides a hint about the text (via Identor) that identifies a particular Factor. Example types include: Text, Key, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabIdentorType.IdentorTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabInstance">
            <summary>
              Represents any item (real, imaginary, virtual, conceptual, or otherwise) that an App or User can define and/or use to generate meaning.
            </summary>
            <remarks>
              <para>Represents any item (real, imaginary, virtual, conceptual, or otherwise) that an App or User can define and/or use to generate meaning. Classes and Instances are closely related, and are the primary method for generating new Artifacts.</para>
              <para>Documentation Note: To explain the Instance object more intuitively, this documentation simplifies some concepts of the Fabric architecture. Please be aware of the full complexity:</para>
              <para>- An Instance receives Factors via its associated Artifact.</para>
              <para>- Each Factor references two Artifacts, which creates a relationship between them.</para>
              <para>- An 'is a' relationship refers to a Factor that uses an 'Is A' Descriptor.</para>
              <para>An Instance represents a singular, unique item. It may have a specific name, however, the name is not required to be unique. Instead, the creator should apply Factors to make the Instance as specific and meaningful as possible. Each Instance must have an 'is a' relationship with at least one Class.</para>
              <para>Ellie's Instance Example: Continued from Ellie's Class Example...</para>
              <para>After completing her new Classes, Ellie would like to add her own dog. She creates an Instance named 'Gulliver', and attaches several Factors to make the Instance as unique as possible. Her Factors define that Gulliver is a Lhasa Apso breed, is owned by Ellie, and was born in September 2007. Zach's Instance Example: Zach built an App that allows users to rate restaurants and individual meals. He created Classes for restaurant chains and meal types. He also created Instances for specific restaurants (with relevant relationships for each).</para>
              <para>When Users rate a particular meal, they also specify the restaurant, the day/time the meal was served, and the meal type. Behind the scenes, the App uses this data to construct a new Instance and its relationships. Because Zach's Instances are well-defined, one User could rate the same meal (at the same restaurant) every day, creating a unique and meaningful Instance each time.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabInstance.Disamb">
            <summary>
              A secondary label or identifier, used to resolve unique-name conflicts.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabInstance.InstanceId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabInstance.Name">
            <summary>
              A descriptive name or title.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabInstance.Note">
            <summary>
              A summary of the Instance's intended meaning or purpose.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabLocator">
            <summary>
              Positions a Factor using geographic or relative coordinates. A Locator attaches a three-dimensional coordinate to a Factor.
            </summary>
            <remarks>
              <para>Positions a Factor using geographic or relative coordinates.</para>
              <para>A Locator attaches a three-dimensional coordinate to a Factor. The LocatorType defines the spatial context of the coordinate, supporting both geographic and relative positioning.</para>
              <para>Geographic coordinates represent a position on a sphere, like Earth.  They use X for longitude, Y for latitude, and Z for elevation (in metres above sea level). Use zero for elevation if it is not known or specified.</para>
              <para>Geographic Example: Objective:</para>
              <para>Specify that person A took photo B from a spot near the Eiffel Tower.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Photo B' as the primary Artifact and 'Person A' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Is Created By' DescriptorType.</para>
              <para>- The Locator uses the 'Earth Coordinate' LocatorType, a '2.292977' value for X, a '48.858154' value for Y, and (optionally) a '34.24' value for Z.</para>
              <para>Factor Phrase:</para>
              <para>Photo B ... Is Created By ... Person A, ... (at an) Earth Coordinate (location of) ... X (longitude) = '2.292977' ... Y (latitude) = '48.858154' ... Z (elevation) = '34.24' (metres above sea level).</para>
              <para>Relative coordinates represent a position relative to the origin and size/bounds of the Factor's primary Artifact. There are LocatorTypes for one, two, and three-dimensional relative coordinates. For coordinates which have:</para>
              <para>- One dimension, use X for time or progress, and leave Y and Z equal to zero.</para>
              <para>- Two dimensions, use X for width, Y for height, and leave Z equal to zero.</para>
              <para>- Three dimensions, use X, Y, and Z values which correspond to the Artifact's X, Y, and Z values. If these axes are undefined, use X for width (or breadth), Y for length (or depth), and Z for height (or elevation).</para>
              <para>Relative 1D Example: Objective:</para>
              <para>Specify that book A refers to painting B on page 148 of 200 (about 74% of the book's length).</para>
              <para>Method:</para>
              <para>- The Factor uses 'Book A' as the primary Artifact and 'Painting B' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Refers To' DescriptorType.</para>
              <para>- The Locator uses the 'Related 1D' LocatorType, a '0.74' value for X, a '0.0' value for Y, and a '0.0' value for Z.</para>
              <para>Factor Phrase:</para>
              <para>Book A ... Refers To ... Painting B, ... (at a) Relative 1D (location of) ... X (position) = 0.74. Relative 2D Example: Objective:</para>
              <para>Specify that photo A includes person B near the top-right (25% from the top, 84% from the left) of the image.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Photo A' as the primary Artifact and 'Person B' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Refers To' DescriptorType.</para>
              <para>- The Locator uses the 'Relative 2D' LocatorType, a '0.84' value for X, a '0.25' value for Y, and a '0.0' value for Z.</para>
              <para>Factor Phrase:</para>
              <para>Photo A ... Refers To ... Person B, ... (at a) Relative 2D (location of) ... X (width) = '0.84' ... Y (height) = '0.25'.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocator.LocatorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocator.ValueX">
            <summary>
              A value representing longitude, time/progress, width, or a particular three-dimensional axis.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocator.ValueY">
            <summary>
              A value representing latitude, height, or a particular three-dimensional axis.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocator.ValueZ">
            <summary>
              A value representing elevation or a particular three-dimensional axis.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabLocatorType">
            <summary>
              Provides spatial context and boundaries (via Locator) for a particular Factor.
            </summary>
            <remarks>
              <para>Provides spatial context and boundaries (via Locator) for a particular Factor. Example types include: Earth Coordinate, Mars Coordinate, Relative 3D Position, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.LocatorTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.MaxX">
            <summary>
              The maximum Locator X-coordinate value.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.MaxY">
            <summary>
              The maximum Locator Y-coordinate value.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.MaxZ">
            <summary>
              The maximum Locator Z-coordinate value.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.MinX">
            <summary>
              The minimum Locator X-coordinate value.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.MinY">
            <summary>
              The minimum Locator Y-coordinate value.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabLocatorType.MinZ">
            <summary>
              The minimum Locator Z-coordinate value.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabMember">
            <summary>
              An association between a User and an App.
            </summary>
            <remarks>
              <para>An association between a User and an App. The App administrator(s) can grant various access privileges to a Member by adjusting its MemberType.</para>
              <para>Every item added to Fabric is associated with a particular Member. Thus, Fabric can determine which App or User is responsible for any particular item, enforce applicable access rights, analyze the data for a particular App and/or User, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMember.MemberId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabMemberType">
            <summary>
              Describes the level of access and control given to a particular Member.
            </summary>
            <remarks>
              <para>Describes the level of access and control given to a particular Member.  Example types include: Member, Admin, Data Provider, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMemberType.MemberTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabMemberTypeAssign">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabNodeForAction">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabNodeForAction.Note">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabNodeForAction.Performed">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMemberTypeAssign.MemberTypeAssignId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabMetaTime">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Day">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Hour">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Millisecond">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Minute">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Month">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Second">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Ticks">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Unix">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaTime.Year">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabMetaVersion">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Day">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Major">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Minor">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Month">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Patch">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Revision">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Version">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabMetaVersion.Year">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabOauthAccess">
            <summary>
              Provides an OAuth access token and other related information.
            </summary>
            <remarks>
              <para>Provides an OAuth access token and other related information. Every Fabric API request requires an access token. To include an OAuth access token with a FabricAPI request, add an "Authorization" header to the HTTP request with a value of "Bearer=[your OAuth access code here]".</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthAccess.access_token">
            <summary>
              A code that maps to various authentication information.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthAccess.expires_in">
            <summary>
              The number of seconds until the access token expires.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthAccess.refresh_token">
            <summary>
              A code that refreshes the authentication session for an expired OAuth access token.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthAccess.token_type">
            <summary>
              For the current Fabric OAuth implementation, this value is always equal to "bearer".
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabOauthError">
            <summary>
              To comply with the OAuth 2.0 specification, all Fabric OAuth requests return a FabOauthError (instead of FabFault or FabError) when errors occur.
            </summary>
            <remarks>
              <para>To comply with the OAuth 2.0 specification, all Fabric OAuth requests return a FabOauthError (instead of FabFault or FabError) when errors occur.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthError.error">
            <summary>
              An error code as defined by the OAuth 2.0 specification.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthError.error_description">
            <summary>
              Provides specific details about the error.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabOauthLogin">
            <summary>
              This object is unique -- the API never returns this object directly.
            </summary>
            <remarks>
              <para>This object is unique -- the API never returns this object directly. Instead, the properties shown below are included as query-string parameters for a redirect URI. This URI is provided by an App, and the App is responsible for accepting (and reacting to) the incoming redirect.</para>
              <para>This redirect is used in one particular scenario: the OAuth login process. After the user completes this process, Fabric performs a redirect with success or failure information.  The success redirect includes the 'code' and 'state' parameters. The failure redirect includes the 'error', 'error_description', and 'state' parameters.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthLogin.code">
            <summary>
              Use this code (also called the 'authorization code') to generate a new OAuth access token.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthLogin.error">
            <summary>
              An error code as defined by the OAuth 2.0 specification.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthLogin.error_description">
            <summary>
              Provides specific details about the error.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthLogin.state">
            <summary>
              Returns the 'state' value that the App provided in the original Oauth request.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabOauthLogout">
            <summary>
              The result of an OAuth logout.
            </summary>
            <remarks>
              <para>The result of an OAuth logout.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthLogout.access_token">
            <summary>
              Identifies a particular OAuth session.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabOauthLogout.success">
            <summary>
              Describes the result of the logout attempt.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabRoot">
            <summary>
              Represents the root, or starting point, of all Traversal Service queries.
            </summary>
            <remarks>
              <para>Represents the root, or starting point, of all Traversal Service queries. The Root provides traversal links to all other available objects.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabRoot.RootId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabService">
            <summary>
              A collection of similar ServiceOperations which all share a similar purpose.
            </summary>
            <remarks>
              <para>A collection of similar ServiceOperations which all share a similar purpose.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabService.Name">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabService.Operations">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabService.Uri">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabServiceOperation">
            <summary>
              A task, query, or operation that belongs to a Service.
            </summary>
            <remarks>
              <para>A task, query, or operation that belongs to a Service.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabServiceOperation.Method">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabServiceOperation.Name">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabServiceOperation.ReturnType">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabServiceOperation.Uri">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpec">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpec.ApiVersion">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpec.Objects">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpec.Services">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecObject">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObject.Description">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObject.Extends">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObject.Name">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObject.Properties">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObject.TraversalFunctions">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObject.TraversalLinks">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecObjectProp">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecValue">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.Description">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.IsOptional">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.Len">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.LenMax">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.LenMin">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.Max">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.Min">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.Name">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.Type">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecValue.ValidRegex">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObjectProp.IsCaseInsensitive">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObjectProp.IsNullable">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObjectProp.IsPrimaryKey">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObjectProp.IsTimestamp">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecObjectProp.IsUnique">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecService">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.Abstract">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.Description">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.Name">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.Operations">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.ResponseWrapper">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.TraversalFunctions">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecService.Uri">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecServiceOperation">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.AuthMemberOwns">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.Description">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.Method">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.Name">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.Parameters">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.RequiredAuth">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.ReturnType">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperation.Uri">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecServiceOperationParam">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperationParam.Index">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecServiceOperationParam.ParamType">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecTravFunc">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravFunc.Description">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravFunc.Name">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravFunc.Parameters">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravFunc.Uri">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecTravFuncParam">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravFuncParam.Index">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabSpecTravLink">
            <summary>
              
            </summary>
            <remarks>
              
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.Description">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.From">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.FromConn">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.IsOutgoing">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.Name">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.Relation">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.To">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.ToConn">
            <summary>
              
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabSpecTravLink.Type">
            <summary>
              
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabStepLink">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabStepLink.Class">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabStepLink.IsOut">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabStepLink.Rel">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabStepLink.Uri">
            <summary>
              TODO
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabUrl">
            <summary>
              A hyperlink or path (uniform resource locator) to some web page, a file, or some other type of content. While a Url does have an associated Artifact, it should be used with certain constraints.
            </summary>
            <remarks>
              <para>A hyperlink or path (uniform resource locator) to some web page, a file, or some other type of content.</para>
              <para>While a Url does have an associated Artifact, it should be used with certain constraints. Consider an scenario where a Url leads to web page with a news article and a photo. The proper prodedure is to create a new Instance for both the news article and photo. With this method:</para>
              <para>- The news article and photo (via their Artifacts) can receive Factors independently.</para>
              <para>- The Url (via its Artifact) should only receive Factors related to the actual web page, its design, etc.</para>
              <para>- Every Url that displays this particular news article can refer the same news article Instance.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabUrl.AbsoluteUrl">
            <summary>
              A unique, valid absolute URL.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabUrl.Name">
            <summary>
              A descriptive name or title.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabUrl.UrlId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabUser">
            <summary>
              A registered Fabric account that has indirect access (via Apps) to the Fabric API.
            </summary>
            <remarks>
              <para>A registered Fabric account that has indirect access (via Apps) to the Fabric API. A User can become a Member of an App, and then use the App's interface to interact with Fabric. An App's interface hides the complex details of the Fabric API, and instead provides intuitive features like custom inputs, searches, summaries, and visualizations. </para>
              <para>Users control their private account data and preferences using the Fabric website.</para>
              <para>Every item added to Fabric is associated with (via Member) a User and and an App. Thus, Fabric can determine which User is responsible for any particular item, enforce applicable access rights, analyze the data for a particular User or Member, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabUser.Name">
            <summary>
              A unique username.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabUser.UserId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVector">
            <summary>
              Applies a meaningful numeric axis and value to a particular Factor. A Vector attaches a numeric value to a Factor, using an arbitrary Artifact to define its 'axis'.
            </summary>
            <remarks>
              <para>Applies a meaningful numeric axis and value to a particular Factor.</para>
              <para>A Vector attaches a numeric value to a Factor, using an arbitrary Artifact to define its 'axis'. This axis depends entirely upon the Vector's purpose. For example, a factual Vector might use an Artifact like 'Height' or 'Shutter Speed'. A Vector that provides an opinion might use an Artifact like 'Quality' or 'Excitement'. While the choice of an axis Artififact is not restricted, it can be beneficial to use Artifacts which are other Apps or Users are already using as Vector axes.</para>
              <para>The VectorType provides boundaries and context for the Vector's value. It can identify the value as a percentage, a level of agreement or disagreement, an opinion-based rating, or simply a plain numeric value. Each VectorType provides additional information, such as a VectorRange, to provide further meaning for the levels within the the allowed value boundaries.</para>
              <para>A Vector's numeric value often reflects a measurement or a has a specific unit. Furthermore, a Vector can use VectorUnitPrefix to specify an order of magnitude for the value. A Vector's value is a long integer, so the prefix is especially useful when fractional values are involved, or when the desired number is larger than a long integer.</para>
              <para>Small Value Example: Objective:</para>
              <para>Specify that image A (which is a photo) has a shutter speed of 1/250 second.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Image A' as the primary Artifact and 'Photo' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Is A' DescriptorType.</para>
              <para>- The Vector uses the 'Shutter Speed' Artifact as the axis, the 'Positive Long' VectorType, '4' as the value, the 'Milli' VectorUnitPrefix, and the 'Second' VectorUnit.</para>
              <para>Factor Phrase:</para>
              <para>Image A ... Is A ... Photo, ... (which, along the) Shutter Speed (axis) ... (with a) Positive Long (numerical range), ... (has a value) '4' ... Milli ... Second(s). Large Value Example: Objective:</para>
              <para>Specify that Earth and the Andromeda Galaxy are 2.5 million light years (2.2705 x 10^22 metres) apart.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Earth' as the primary Artifact and 'Andromeda Galaxy' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Is Related To' DescriptorType.</para>
              <para>- The Vector uses the 'Distance' Artifact as the axis, the 'Positive Long' VectorType, '22,705' as the value, the 'Exa' VectorUnitPrefix (represents 10^18), and the 'Metre' VectorUnit.</para>
              <para>Factor Phrase:</para>
              <para>Earth ... Is Related To ... Andromeda Galaxy, ... (which, along the) Distance (axis) ... (with a) Positive Long (numerical range), ... (has a value) '22,705' ... Exa ... Metre(s). Negative Value Example: Objective:</para>
              <para>Specify that article A mentions person B in a very unfair manner, about 80% of the maximum unfairness imaginable.</para>
              <para>Method:</para>
              <para>- The Factor uses 'Article A' as the primary Artifact and 'Person B' as the related Artifact.</para>
              <para>- The Descriptor uses the 'Refers To' DescriptorType.</para>
              <para>- The Vector uses the 'Fairness' Artifact as the axis, the 'Opposable Favorability' VectorType, '-80' as the value, the default 'Base' VectorUnitPrefix, and the default 'None' VectorUnit. This VectorType has bounds of -100 to +100.</para>
              <para>Factor Phrase:</para>
              <para>Article A ... Refers To ... Person B, ... (which, along the) Fairness (axis) ... (with a) Opposable Favorabillity (numerical range), ... (has a value) '-80'.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVector.Value">
            <summary>
              An integral value which is to be plotted along the specified axis.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVector.VectorId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVectorRange">
            <summary>
              Provides meaning (using relatively-positioned points/labels) across the numerical range of a particular VectorType.
            </summary>
            <remarks>
              <para>Provides meaning (using relatively-positioned points/labels) across the numerical range of a particular VectorType. Example ranges include: Negative Numeric, Full Agreement, Positive Favorability, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorRange.VectorRangeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVectorRangeLevel">
            <summary>
              A relatively-positioned point which provides meaning to a numerical range.
            </summary>
            <remarks>
              <para>A relatively-positioned point which provides meaning to a numerical range. Example levels include: Maximum, Somewhat Disagree, Mostly Favorable, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorRangeLevel.Position">
            <summary>
              A value (between 0.0 and 1.0) which defines the relative position between a numeric range's minimum and maximum boundaries.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorRangeLevel.VectorRangeLevelId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVectorType">
            <summary>
              Provides meaning and boundaries (via Vector) for a numeric value given to a particular Factor.
            </summary>
            <remarks>
              <para>Provides meaning and boundaries (via Vector) for a numeric value given to a particular Factor. Example types include: Full Percentage, Standard Agreement, Opposable Favorability, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorType.Max">
            <summary>
              The maximum Vector value allowed.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorType.Min">
            <summary>
              The minimum Vector value allowed.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorType.VectorTypeId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVectorUnit">
            <summary>
              Provides a unit of measurement for the numeric value of a particular Vector.
            </summary>
            <remarks>
              <para>Provides a unit of measurement for the numeric value of a particular Vector. Example units include: Metre, Second, Byte, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnit.Symbol">
            <summary>
              A unique symbol or abbreviation.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnit.VectorUnitId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVectorUnitDerived">
            <summary>
              TODO
            </summary>
            <remarks>
              <para>TODO</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnitDerived.Exponent">
            <summary>
              TODO
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnitDerived.VectorUnitDerivedId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.Api.FabVectorUnitPrefix">
            <summary>
              Provides a level of magnitude for the numeric value of a particular Vector.
            </summary>
            <remarks>
              <para>Provides a level of magnitude for the numeric value of a particular Vector. Example unit prefixes include: Kilo, Nano, Gibi, etc.</para>
            </remarks>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnitPrefix.Amount">
            <summary>
              The difference in magnitude (a multipler) relative to the base unit.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnitPrefix.Symbol">
            <summary>
              An abbreviation, which is typically placed directly before the VectorUnit symbol.
            </summary>
        </member>
        <member name="P:Fabric.Clients.Cs.Api.FabVectorUnitPrefix.VectorUnitPrefixId">
            <summary>
              Uniquely identifies this object amongst all other objects of this type.
            </summary>
        </member>
        <member name="T:Fabric.Clients.Cs.FabricClient">
            <summary />
        </member>
        <member name="F:Fabric.Clients.Cs.FabricClient.ApiVersion">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClient.ResetInitialization">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClient.InitOnce(Fabric.Clients.Cs.IFabricClientConfig)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClient.AddConfig(Fabric.Clients.Cs.IFabricClientConfig)">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClient.#ctor">
            <summary />
        </member>
        <member name="M:Fabric.Clients.Cs.FabricClient.#ctor(System.String)">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.IsInitialized">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.Config">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.PersonSession">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.AppSession">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.AppDataProvSession">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.Services">
            <summary />
        </member>
        <member name="P:Fabric.Clients.Cs.FabricClient.UseDataProviderPerson">
            <summary />
        </member>
    </members>
</doc>
